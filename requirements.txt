# ====================================================================
# DRIVER DROWSINESS DETECTION SYSTEM - REQUIREMENTS
# ====================================================================
# This file contains all the Python dependencies required to run the
# driver drowsiness detection system. Each package is carefully versioned
# to ensure compatibility and stable performance.
#
# INSTALLATION INSTRUCTIONS:
# 1. Create a virtual environment (recommended):
#    python -m venv drowsiness_env
#    source drowsiness_env/bin/activate  # On Windows: drowsiness_env\Scripts\activate
# 
# 2. Install all dependencies:
#    pip install -r requirements.txt
#
# 3. Additional setup for dlib (if installation fails):
#    - Install cmake: pip install cmake
#    - Install dlib: pip install dlib
# ====================================================================

# ====================================================================
# COMPUTER VISION AND IMAGE PROCESSING
# ====================================================================
# OpenCV (Open Source Computer Vision Library) - Core dependency
# Used for: Video capture, image processing, face detection, eye region extraction
# Version rationale: 4.5.0+ includes stable face detection algorithms and camera handling
opencv-python>=4.5.0,<5.0.0

# ====================================================================
# FACIAL LANDMARK DETECTION AND SHAPE PREDICTION
# ====================================================================
# dlib - Machine learning library with facial landmark detection
# Used for: 68/70-point facial landmark detection, eye aspect ratio calculation
# Version rationale: 19.22.0+ provides stable shape predictor models
# Note: Requires shape_predictor_70_face_landmarks.dat model file
dlib>=19.22.0,<20.0.0

# ====================================================================
# NUMERICAL COMPUTING AND MATHEMATICAL OPERATIONS
# ====================================================================
# NumPy - Fundamental package for scientific computing
# Used for: Array operations, mathematical calculations, image array manipulation
# Version rationale: 1.19.0+ for stability, <2.0.0 to avoid breaking changes
numpy>=1.19.0,<2.0.0

# SciPy - Scientific computing library
# Used for: Euclidean distance calculations for eye aspect ratio (EAR)
# Version rationale: 1.7.0+ includes optimized spatial distance functions
scipy>=1.7.0,<2.0.0

# ====================================================================
# AUDIO PROCESSING AND ALERTS
# ====================================================================
# playsound - Simple audio playback library
# Used for: Playing drowsiness alert sounds (alarm.wav)
# Version rationale: 1.2.2+ for cross-platform compatibility
# Note: May require additional audio drivers on some systems
playsound>=1.2.2,<2.0.0

# ====================================================================
# DATA VISUALIZATION AND PLOTTING
# ====================================================================
# Matplotlib - Comprehensive plotting library
# Used for: Lane detection visualization, debugging plots, data analysis
# Version rationale: 3.3.0+ provides stable plotting functionality
matplotlib>=3.3.0,<4.0.0

# ====================================================================
# BUILT-IN PYTHON LIBRARIES (No installation required)
# ====================================================================
# The following libraries are part of Python's standard library:
# - tkinter: GUI framework for the user interface
# - threading: Multi-threading for background alarm processing
# - queue: Thread-safe data exchange between threads
# - subprocess: Running detection scripts from main UI
# - time: Timing operations and delays
# - sys: System-specific parameters and functions
# ====================================================================

# ====================================================================
# COMPATIBILITY NOTES
# ====================================================================
# Python Version: Tested with Python 3.7 - 3.10
# Operating Systems: Windows 10/11, macOS 10.15+, Ubuntu 18.04+
# 
# TROUBLESHOOTING:
# - If dlib installation fails, install Visual Studio Build Tools (Windows)
# - For macOS users, install Xcode command line tools: xcode-select --install
# - Linux users may need: sudo apt-get install cmake libopenblas-dev liblapack-dev
# 
# GPU SUPPORT (Optional):
# For better performance, consider installing opencv-contrib-python
# instead of opencv-python for GPU acceleration support
# ====================================================================
